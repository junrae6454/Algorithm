#include <iostream>
#include <vector>
using namespace std;

int map[510][510];
int N;
int M;
int max_num;
int temp[19][4][2] = { 
{ { 0,0 },{ 0,1 },{ 0,2 },{ 0,3 } },
{ { 0,0 },{ 1,0 },{ 2,0 },{ 3,0 } },
{ { 0,0 },{ 1,0 },{ 2,0 },{ 2,1 } },
{ { 2,0 },{ 0,1 },{ 1,1 },{ 2,1 } },
{ { 0,0 },{ 0,1 },{ 1,1 },{ 2,1 } },
{ { 0,0 },{ 1,0 },{ 2,0 },{ 0,1 } },
{ { 0,0 },{ 1,0 },{ 1,1 },{ 1,2 } },
{ { 0,2 },{ 1,0 },{ 1,1 },{ 1,2 } },
{ { 0,0 },{ 0,1 },{ 0,2 },{ 1,0 } },
{ { 0,0 },{ 0,1 },{ 0,2 },{ 1,2 } },
{ { 0,0 },{ 1,0 },{ 2,0 },{ 1,1 } },
{ { 1,0 },{ 0,1 },{ 1,1 },{ 2,1 } },
{ { 0,1 },{ 1,0 },{ 1,1 },{ 1,2 } },
{ { 0,0 },{ 0,1 },{ 0,2 },{ 1,1 } },
{ { 0,0 },{ 1,0 },{ 1,1 },{ 2,1 } },
{ { 1,0 },{ 2,0 },{ 1,1 },{ 0,1 } },
{ { 0,0 },{ 0,1 },{ 1,1 },{ 1,2 } },
{ { 1,0 },{ 1,1 },{ 0,1 },{ 0,2 } },
{ { 0,0 },{ 0,1 },{ 1,0 },{ 1,1 } } };

void search()
{
	int max;
	int ok = 0;
	for (int i = 0; i < N; i++)
	{
		for (int j = 0; j < M; j++)
		{
			
			for (int l = 0; l < 19; l++)
			{
				ok = 0;
				max = 0;
				for (int k = 0; k < 4; k++)
				{
					if (i + temp[l][k][0] < N &&j + temp[l][k][1] < M)
					{
						ok++;
						max = max + map[i + temp[l][k][0]][j + temp[l][k][1]];
					}
					if (ok == 4)
					{
						if (max > max_num)
							max_num = max;
					}
				}
			}
		}
	}
	
}
int main()
{
	cin >> N >> M;

	for (int i = 0; i < N; i++)
	{
		for (int j = 0; j < M; j++)
		{
			cin >> map[i][j];
		}
	}

	search();

	cout << max_num;
}